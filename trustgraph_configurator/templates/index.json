{
    "templates": [
	{
	    "name": "0.21",
	    "description": "Support for Mistral API, LM Studio, multiple OCR options.  Integrated deployment to AWS, GCP, Azure, Scaleway using Pulumi.",
	    "version": "0.21.17",
	    "status": "stable"
	},
	{
	    "name": "0.22",
	    "description": "Dynamic configuration of prompt and agent tools without a system restart",
	    "version": "0.22.11",
	    "status": "stable"
	},
	{
	    "name": "0.23",
	    "description": "Dynamic configuration of processing flows with the addition of the librarian component, and the flow API.  This is an early release of a major change.  Some of the functionality is only available in APIs and command-line.",
	    "version": "0.23.25",
	    "status": "alpha"
	},
	{
	    "name": "1.0",
	    "description": "Production release of Flow API, Librarian and dynamic flow processing.  For best results stay with cassandra and qdrant stores.",
	    "version": "1.0.22",
	    "status": "stable"
	}
	{
	    "name": "1.1",
	    "description": "MCP support and some agent functionality upgrades.",
	    "version": "1.1.5",
	    "status": "pre-release"
	}
    ],
    "platforms": [
	{
	    "name": "podman-compose",
	    "description": "Uses podman-compose to deploy a compose file to a local Podman environment"
	},
	{
	    "name": "docker-compose",
	    "description": "Uses docker-compose to deploy a compose file to a local Docker installation"
	},
	{
	    "name": "minikube-k8s",
	    "description": "Uses kubectl to deploy resources to a Minikube Kubernetes cluster"
	},
	{
	    "name": "scw-k8s",
	    "description": "Uses kubectl to deploy resources to a Kubernetes cluster running in Scaleway cloud"
	},
	{
	    "name": "gcp-k8s",
	    "description": "Uses kubectl to deploy resources to a Kubernetes cluster on Google Cloud (e.g. GKE)"
	},
	{
	    "name": "aks-k8s",
	    "description": "Uses kubectl to deploy resources to a Kubernetes cluster in Azure (AKS)"
	},
	{
	    "name": "eks-k8s",
	    "description": "Uses kubectl to deploy resources to an Kubernetes cluster running in AWS (e.g. EKS)"
	}
    ],
    "statuses": [
	{
	    "name": "pre-release",
	    "description": "Pre-release"
	},
	{
	    "name": "alpha",
	    "description": "Alpha"
	},
	{
	    "name": "beta",
	    "description": "Beta"
	},
	{
	    "name": "stable",
	    "description": "Stable for production use"
	}
    ]
}
