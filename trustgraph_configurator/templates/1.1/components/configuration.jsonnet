
// This puts the default configuration together.  References many things,
// flow classes, a default flow, token costs, prompts, agent tools

// FIXME: Something hacky happened.  The configuration was slow to build
// because it JSON-encodes the configuration object.  So, we have the
// hard-coded JSON string here.  There needs to be a better way of
// dealing with this.

local base = import "base/base.jsonnet";
local images = import "values/images.jsonnet";
local url = import "values/url.jsonnet";

local prompts = import "prompts/mixtral.jsonnet";
local default_prompts = import "prompts/default-prompts.jsonnet";

local token_costs = import "values/token-costs.jsonnet";

local flow_classes = import "flows/flow-classes.jsonnet";

{

    prompts:: default_prompts,
    tools:: [],

    // This defines standard 'interfaces'.  Different flow classes can
    // support different interfaces.  Interfaces are 'external' endpoints
    // into a processing chain.
    "interface-descriptions":: {
        "document-load": {
            "description": "Document loader",
            "kind": "send",
            "visible": true,
        },
        "text-load": {
            "description": "Text document loader",
            "kind": "send",
            "visible": true,
        },
        "entity-contexts-load": {
            "description": "Entity contexts loader",
            "kind": "send",
        },
        "triples-store": {
            "description": "Triples loader",
            "kind": "send",
        },
        "graph-embeddings-store": {
            "description": "Graph embeddings loader",
            "kind": "send",
        },
        "document-embeddings-store": {
            "description": "Document embeddings loader",
            "kind": "send",
        },
        "graph-rag": {
            "description": "GraphRAG service",
            "kind": "request-response",
        },
        "document-rag": {
            "description": "ChunkRAG service",
            "kind": "request-response",
        },
        "triples": {
            "description": "Triples query service",
            "kind": "request-response",
        },
        "graph-embeddings": {
            "description": "Graph embeddings service",
            "kind": "request-response",
        },
        "document-embeddings": {
            "description": "Document embeddings service",
            "kind": "request-response",
        },
        "prompt": {
            "description": "Prompt service",
            "kind": "request-response",
        },
        "agent": {
            "description": "Agent service",
            "kind": "request-response",
        },
        "text-completion": {
            "description": "Text completion service",
            "kind": "request-response",
        },
    },

    "flow-classes":: flow_classes,

    local class_processors = function(classes, name)
        [
            [
                local key = std.strReplace(p.key, "{class}", name);
                local parts = std.splitLimit(key, ":", 2);
                parts,
                {
                    [q.key]: std.strReplace(q.value, "{class}", name)
                    for q in std.objectKeysValuesAll(p.value)
                }
            ]
            for p in std.objectKeysValuesAll(classes[name].class)
        ],

    local flow_processors = function(classes, name, id)
        [
            [
                local key = std.strReplace(
                    std.strReplace(p.key, "{class}", name),
                    "{id}", id
                );
                local parts = std.splitLimit(key, ":", 2);
                parts,
                {
                    [q.key]: std.strReplace(
                        std.strReplace(q.value, "{class}", name),
                        "{id}", id
                    )
                    for q in std.objectKeysValuesAll(p.value)
                }
            ]
            for p in std.objectKeysValuesAll(classes[name].flow)
        ],

    local interfaces = function(classes, name, id)
        local intf = classes[name].interfaces;
        {
            [p.key]:
            if std.isString(p.value) then
                local i = std.strReplace(p.value, "{class}", name);
                local i2 = std.strReplace(i, "{id}", id);
                i2
            else
                {
                    [q.key]:
                        local i = std.strReplace(q.value, "{class}", name);
                        local i2 = std.strReplace(i, "{id}", id);
                        i2
                    for q in std.objectKeysValuesAll(p.value)
                }
            for p in std.objectKeysValuesAll(intf)
        },

    local default_flow_id = "default",
    local default_flow_class = "document-rag+graph-rag",

    // Temporary hackery
    local flow_array =
        class_processors($["flow-classes"], default_flow_class) +
        flow_processors($["flow-classes"], default_flow_class,
            default_flow_id),

    local flow_objects = std.map(
        function(item) {
            [item[0][0]] +: {
                [item[0][1]]: item[1]
            }
        },
        flow_array
    ),

    local flows = std.foldr(
        function(a, b) a + b,
        flow_objects,
        {}
    ),

    local default_flow_interfaces = interfaces(
        $["flow-classes"], default_flow_class, default_flow_id
    ),

    local configurationOLD = std.manifestJsonMinified({
        prompt: {
            "system": $["prompts"]["system-template"],
            "template-index": std.objectFieldsAll($.prompts.templates),
        } + {
            ["template." + p.key]: p.value
            for p in std.objectKeysValuesAll($.prompts.templates)
        },
        agent: {
            "tool-index": [t.id for t in $.tools],
        } + {
            ["tool." + p.id]: p
            for p in $.tools
        },
        "flow-classes": $["flow-classes"],
        "interface-descriptions": $["interface-descriptions"],
        "flows": {
            [default_flow_id]: {
                "description": "Default processing flow",
                "class-name": default_flow_class,
                "interfaces": default_flow_interfaces,
            },
        },
        "flows-active": flows,
        "token-costs": token_costs,
    }),

    local configuration = "{ \"flows\": { \"default\": \"{\\\"class-name\\\": \\\"document-rag+graph-rag\\\", \\\"description\\\": \\\"Default processing flow\\\", \\\"interfaces\\\": {\\\"agent\\\": {\\\"request\\\": \\\"non-persistent://tg/request/agent:default\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:default\\\"}, \\\"document-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:document-rag+graph-rag\\\"}, \\\"document-embeddings-store\\\": \\\"persistent://tg/flow/document-embeddings-store:default\\\", \\\"document-load\\\": \\\"persistent://tg/flow/document-load:default\\\", \\\"document-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-rag:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:document-rag+graph-rag\\\"}, \\\"embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:document-rag+graph-rag\\\"}, \\\"entity-contexts-load\\\": \\\"persistent://tg/flow/entity-contexts-load:default\\\", \\\"graph-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:document-rag+graph-rag\\\"}, \\\"graph-embeddings-store\\\": \\\"persistent://tg/flow/graph-embeddings-store:default\\\", \\\"graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-rag:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:document-rag+graph-rag\\\"}, \\\"mcp-tool\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:document-rag+graph-rag\\\"}, \\\"prompt\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:document-rag+graph-rag\\\"}, \\\"text-completion\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:document-rag+graph-rag\\\"}, \\\"text-load\\\": \\\"persistent://tg/flow/text-document-load:default\\\", \\\"triples\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:document-rag+graph-rag\\\"}, \\\"triples-store\\\": \\\"persistent://tg/flow/triples-store:default\\\"}}\" }, \"prompt\": { \"system\": \"\\\"You are a helpful assistant.\\\\n\\\"\", \"template-index\": \"[\\\"agent-react\\\", \\\"document-prompt\\\", \\\"extract-definitions\\\", \\\"extract-relationships\\\", \\\"extract-rows\\\", \\\"extract-topics\\\", \\\"kg-prompt\\\", \\\"question\\\"]\", \"template.agent-react\": \"{\\\"prompt\\\": \\\"Answer the following questions as best you can. You have\\\\naccess to the following functions:\\\\n\\\\n{% for tool in tools %}{\\\\n    \\\\\\\"function\\\\\\\": \\\\\\\"{{ tool.name }}\\\\\\\",\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"{{ tool.description }}\\\\\\\",\\\\n    \\\\\\\"arguments\\\\\\\": [\\\\n{% for arg in tool.arguments %}        {\\\\n            \\\\\\\"name\\\\\\\": \\\\\\\"{{ arg.name }}\\\\\\\",\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"{{ arg.type }}\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"{{ arg.description }}\\\\\\\",\\\\n        }\\\\n{% endfor %}\\\\n    ]\\\\n}\\\\n{% endfor %}\\\\n\\\\nYou can either choose to call a function to get more information, or\\\\nreturn a final answer.\\\\n    \\\\nTo call a function, respond with a JSON object of the following format:\\\\n\\\\n{\\\\n    \\\\\\\"thought\\\\\\\": \\\\\\\"your thought about what to do\\\\\\\",\\\\n    \\\\\\\"action\\\\\\\": \\\\\\\"the action to take, should be one of [{{tool_names}}]\\\\\\\",\\\\n    \\\\\\\"arguments\\\\\\\": {\\\\n        \\\\\\\"argument1\\\\\\\": \\\\\\\"argument_value\\\\\\\",\\\\n        \\\\\\\"argument2\\\\\\\": \\\\\\\"argument_value\\\\\\\"\\\\n    }\\\\n}\\\\n\\\\nTo provide a final answer, response a JSON object of the following format:\\\\n\\\\n{\\\\n  \\\\\\\"thought\\\\\\\": \\\\\\\"I now know the final answer\\\\\\\",\\\\n  \\\\\\\"final-answer\\\\\\\": \\\\\\\"the final answer to the original input question\\\\\\\"\\\\n}\\\\n\\\\nPrevious steps are included in the input.  Each step has the following\\\\nformat in your output:\\\\n\\\\n{\\\\n  \\\\\\\"thought\\\\\\\": \\\\\\\"your thought about what to do\\\\\\\",\\\\n  \\\\\\\"action\\\\\\\": \\\\\\\"the action taken\\\\\\\",\\\\n  \\\\\\\"arguments\\\\\\\": {\\\\n      \\\\\\\"argument1\\\\\\\": action argument,\\\\n      \\\\\\\"argument2\\\\\\\": action argument2\\\\n  },\\\\n  \\\\\\\"observation\\\\\\\": \\\\\\\"the result of the action\\\\\\\",\\\\n}\\\\n\\\\nRespond by describing either one single thought/action/arguments or\\\\nthe final-answer.  Pause after providing one action or final-answer.\\\\n\\\\n{% if context %}Additional context has been provided:\\\\n{{context}}{% endif %}\\\\n\\\\nQuestion: {{question}}\\\\n\\\\nInput:\\\\n    \\\\n{% for h in history %}\\\\n{\\\\n    \\\\\\\"action\\\\\\\": \\\\\\\"{{h.action}}\\\\\\\",\\\\n    \\\\\\\"arguments\\\\\\\": [\\\\n{% for k, v in h.arguments.items() %}        {\\\\n            \\\\\\\"{{k}}\\\\\\\": \\\\\\\"{{v}}\\\\\\\",\\\\n{%endfor%}        }\\\\n    ],\\\\n    \\\\\\\"observation\\\\\\\": \\\\\\\"{{h.observation}}\\\\\\\"\\\\n}\\\\n{% endfor %}\\\", \\\"response-type\\\": \\\"json\\\"}\", \"template.document-prompt\": \"{\\\"prompt\\\": \\\"Study the following context. Use only the information provided in the context in your response. Do not speculate if the answer is not found in the provided set of knowledge statements.\\\\n\\\\nHere is the context:\\\\n{{documents}}\\\\n\\\\nUse only the provided knowledge statements to respond to the following:\\\\n{{query}}\\\\n\\\", \\\"response-type\\\": \\\"text\\\"}\", \"template.extract-definitions\": \"{\\\"prompt\\\": \\\"Study the following text and derive definitions for any discovered entities. Do not provide definitions for entities whose definitions are incomplete or unknown. Output relationships in JSON format as an array of objects with keys:\\\\n- entity: the name of the entity\\\\n- definition: English text which defines the entity\\\\n\\\\nHere is the text:\\\\n{{text}}\\\\n\\\\nRequirements:\\\\n- Do not provide explanations.\\\\n- Do not use special characters in the response text.\\\\n- The response will be written as plain text.\\\\n- Do not include null or unknown definitions.\\\\n- The response shall use the following JSON schema structure:\\\\n\\\\n```json\\\\n[{\\\\\\\"entity\\\\\\\": string, \\\\\\\"definition\\\\\\\": string}]\\\\n```\\\", \\\"response-type\\\": \\\"json\\\", \\\"schema\\\": {\\\"items\\\": {\\\"properties\\\": {\\\"definition\\\": {\\\"type\\\": \\\"string\\\"}, \\\"entity\\\": {\\\"type\\\": \\\"string\\\"}}, \\\"required\\\": [\\\"entity\\\", \\\"definition\\\"], \\\"type\\\": \\\"object\\\"}, \\\"type\\\": \\\"array\\\"}}\", \"template.extract-relationships\": \"{\\\"prompt\\\": \\\"Study the following text and derive entity relationships.  For each relationship, derive the subject, predicate and object of the relationship. Output relationships in JSON format as an array of objects with keys:\\\\n- subject: the subject of the relationship\\\\n- predicate: the predicate\\\\n- object: the object of the relationship\\\\n- object-entity: FALSE if the object is a simple data type and TRUE if the object is an entity\\\\n\\\\nHere is the text:\\\\n{{text}}\\\\n\\\\nRequirements:\\\\n- You will respond only with well formed JSON.\\\\n- Do not provide explanations.\\\\n- Respond only with plain text.\\\\n- Do not respond with special characters.\\\\n- The response shall use the following JSON schema structure:\\\\n\\\\n```json\\\\n[{\\\\\\\"subject\\\\\\\": string, \\\\\\\"predicate\\\\\\\": string, \\\\\\\"object\\\\\\\": string, \\\\\\\"object-entity\\\\\\\": boolean}]\\\\n```\\\\n\\\", \\\"response-type\\\": \\\"json\\\", \\\"schema\\\": {\\\"items\\\": {\\\"properties\\\": {\\\"object\\\": {\\\"type\\\": \\\"string\\\"}, \\\"object-entity\\\": {\\\"type\\\": \\\"boolean\\\"}, \\\"predicate\\\": {\\\"type\\\": \\\"string\\\"}, \\\"subject\\\": {\\\"type\\\": \\\"string\\\"}}, \\\"required\\\": [\\\"subject\\\", \\\"predicate\\\", \\\"object\\\", \\\"object-entity\\\"], \\\"type\\\": \\\"object\\\"}, \\\"type\\\": \\\"array\\\"}}\", \"template.extract-rows\": \"{\\\"prompt\\\": \\\"<instructions>\\\\nStudy the following text and derive objects which match the schema provided.\\\\n\\\\nYou must output an array of JSON objects for each object you discover\\\\nwhich matches the schema.  For each object, output a JSON object whose fields\\\\ncarry the name field specified in the schema.\\\\n</instructions>\\\\n\\\\n<schema>\\\\n{{schema}}\\\\n</schema>\\\\n\\\\n<text>\\\\n{{text}}\\\\n</text>\\\\n\\\\n<requirements>\\\\nYou will respond only with raw JSON format data. Do not provide\\\\nexplanations. Do not add markdown formatting or headers or prefixes.\\\\n</requirements>\\\", \\\"response-type\\\": \\\"json\\\"}\", \"template.extract-topics\": \"{\\\"prompt\\\": \\\"Read the provided text carefully. You will identify topics and their definitions found in the provided text. Topics are intangible concepts.\\\\n\\\\nReading Instructions:\\\\n- Ignore document formatting in the provided text.\\\\n- Study the provided text carefully for intangible concepts.\\\\n\\\\nHere is the text:\\\\n{{text}}\\\\n\\\\nResponse Instructions: \\\\n- Do not respond with special characters.\\\\n- Return only topics that are concepts and unique to the provided text.\\\\n- Respond only with well-formed JSON.\\\\n- The JSON response shall be an array of objects with keys \\\\\\\"topic\\\\\\\" and \\\\\\\"definition\\\\\\\". \\\\n- The response shall use the following JSON schema structure:\\\\n\\\\n```json\\\\n[{\\\\\\\"topic\\\\\\\": string, \\\\\\\"definition\\\\\\\": string}]\\\\n```\\\\n\\\\n- Do not write any additional text or explanations.\\\", \\\"response-type\\\": \\\"json\\\", \\\"schema\\\": {\\\"items\\\": {\\\"properties\\\": {\\\"definition\\\": {\\\"type\\\": \\\"string\\\"}, \\\"topic\\\": {\\\"type\\\": \\\"string\\\"}}, \\\"required\\\": [\\\"topic\\\", \\\"definition\\\"], \\\"type\\\": \\\"object\\\"}, \\\"type\\\": \\\"array\\\"}}\", \"template.kg-prompt\": \"{\\\"prompt\\\": \\\"Study the following set of knowledge statements. The statements are written in Cypher format that has been extracted from a knowledge graph. Use only the provided set of knowledge statements in your response. Do not speculate if the answer is not found in the provided set of knowledge statements.\\\\n\\\\nHere's the knowledge statements:\\\\n{% for edge in knowledge %}({{edge.s}})-[{{edge.p}}]->({{edge.o}})\\\\n{%endfor%}\\\\n\\\\nUse only the provided knowledge statements to respond to the following:\\\\n{{query}}\\\\n\\\", \\\"response-type\\\": \\\"text\\\"}\", \"template.question\": \"{\\\"prompt\\\": \\\"{{question}}\\\"}\" }, \"agent\": { \"tool-index\": \"[\\\"sample-query\\\", \\\"sample-completion\\\"]\", \"tool.sample-completion\": \"{\\\"arguments\\\": [{\\\"description\\\": \\\"A natural language question.\\\", \\\"name\\\": \\\"question\\\", \\\"type\\\": \\\"string\\\"}], \\\"config\\\": {\\\"input\\\": \\\"question\\\"}, \\\"description\\\": \\\"This tool questions an LLM for further information.  The question should be a natural language question.\\\", \\\"id\\\": \\\"sample-completion\\\", \\\"name\\\": \\\"Sample text completion\\\", \\\"type\\\": \\\"text-completion\\\"}\", \"tool.sample-query\": \"{\\\"arguments\\\": [{\\\"description\\\": \\\"A simple natural language question.\\\", \\\"name\\\": \\\"question\\\", \\\"type\\\": \\\"string\\\"}], \\\"config\\\": {\\\"input\\\": \\\"question\\\"}, \\\"description\\\": \\\"This tool queries a knowledge base that holds information about XYZ.  This should be a natural language question.\\\", \\\"id\\\": \\\"sample-query\\\", \\\"name\\\": \\\"Sample query\\\", \\\"type\\\": \\\"knowledge-query\\\"}\" }, \"flows-active\": { \"agent-manager\": \"{\\\"default\\\": {\\\"graph-rag-request\\\": \\\"non-persistent://tg/request/graph-rag:document-rag+graph-rag\\\", \\\"graph-rag-response\\\": \\\"non-persistent://tg/response/graph-rag:document-rag+graph-rag\\\", \\\"mcp-tool-request\\\": \\\"non-persistent://tg/request/mcp-tool:document-rag+graph-rag\\\", \\\"mcp-tool-response\\\": \\\"non-persistent://tg/response/mcp-tool:document-rag+graph-rag\\\", \\\"next\\\": \\\"non-persistent://tg/request/agent:default\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:document-rag+graph-rag\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:document-rag+graph-rag\\\", \\\"request\\\": \\\"non-persistent://tg/request/agent:default\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:default\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:document-rag+graph-rag\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:document-rag+graph-rag\\\"}}\", \"chunker\": \"{\\\"default\\\": {\\\"input\\\": \\\"persistent://tg/flow/text-document-load:default\\\", \\\"output\\\": \\\"persistent://tg/flow/chunk-load:default\\\"}}\", \"de-query\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:document-rag+graph-rag\\\"}}\", \"de-write\": \"{\\\"default\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-embeddings-store:default\\\"}}\", \"document-embeddings\": \"{\\\"default\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:document-rag+graph-rag\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:document-rag+graph-rag\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:default\\\", \\\"output\\\": \\\"persistent://tg/flow/document-embeddings-store:default\\\"}}\", \"document-rag\": \"{\\\"document-rag+graph-rag\\\": {\\\"document-embeddings-request\\\": \\\"non-persistent://tg/request/document-embeddings:document-rag+graph-rag\\\", \\\"document-embeddings-response\\\": \\\"non-persistent://tg/response/document-embeddings:document-rag+graph-rag\\\", \\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:document-rag+graph-rag\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:document-rag+graph-rag\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:document-rag+graph-rag\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:document-rag+graph-rag\\\", \\\"request\\\": \\\"non-persistent://tg/request/document-rag:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:document-rag+graph-rag\\\"}}\", \"embeddings\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:document-rag+graph-rag\\\"}}\", \"ge-query\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:document-rag+graph-rag\\\"}}\", \"ge-write\": \"{\\\"default\\\": {\\\"input\\\": \\\"persistent://tg/flow/graph-embeddings-store:default\\\"}}\", \"graph-embeddings\": \"{\\\"default\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:document-rag+graph-rag\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:document-rag+graph-rag\\\", \\\"input\\\": \\\"persistent://tg/flow/entity-contexts-load:default\\\", \\\"output\\\": \\\"persistent://tg/flow/graph-embeddings-store:default\\\"}}\", \"graph-rag\": \"{\\\"document-rag+graph-rag\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:document-rag+graph-rag\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:document-rag+graph-rag\\\", \\\"graph-embeddings-request\\\": \\\"non-persistent://tg/request/graph-embeddings:document-rag+graph-rag\\\", \\\"graph-embeddings-response\\\": \\\"non-persistent://tg/response/graph-embeddings:document-rag+graph-rag\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:document-rag+graph-rag\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:document-rag+graph-rag\\\", \\\"request\\\": \\\"non-persistent://tg/request/graph-rag:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:document-rag+graph-rag\\\", \\\"triples-request\\\": \\\"non-persistent://tg/request/triples:document-rag+graph-rag\\\", \\\"triples-response\\\": \\\"non-persistent://tg/response/triples:document-rag+graph-rag\\\"}}\", \"kg-extract-definitions\": \"{\\\"default\\\": {\\\"entity-contexts\\\": \\\"persistent://tg/flow/entity-contexts-load:default\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:default\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:document-rag+graph-rag\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:document-rag+graph-rag\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:default\\\"}}\", \"kg-extract-relationships\": \"{\\\"default\\\": {\\\"input\\\": \\\"persistent://tg/flow/chunk-load:default\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:document-rag+graph-rag\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:document-rag+graph-rag\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:default\\\"}}\", \"mcp-tool\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:document-rag+graph-rag\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:document-rag+graph-rag\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:document-rag+graph-rag\\\"}}\", \"metering\": \"{\\\"document-rag+graph-rag\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion:document-rag+graph-rag\\\"}}\", \"metering-rag\": \"{\\\"document-rag+graph-rag\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion-rag:document-rag+graph-rag\\\"}}\", \"pdf-decoder\": \"{\\\"default\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-load:default\\\", \\\"output\\\": \\\"persistent://tg/flow/text-document-load:default\\\"}}\", \"prompt\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:document-rag+graph-rag\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:document-rag+graph-rag\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:document-rag+graph-rag\\\"}}\", \"prompt-rag\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt-rag:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt-rag:document-rag+graph-rag\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion-rag:document-rag+graph-rag\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion-rag:document-rag+graph-rag\\\"}}\", \"text-completion\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:document-rag+graph-rag\\\"}}\", \"text-completion-rag\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion-rag:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion-rag:document-rag+graph-rag\\\"}}\", \"triples-query\": \"{\\\"document-rag+graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:document-rag+graph-rag\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:document-rag+graph-rag\\\"}}\", \"triples-write\": \"{\\\"default\\\": {\\\"input\\\": \\\"persistent://tg/flow/triples-store:default\\\"}}\" }, \"token-costs\": { \"anthropic.claude-3-5-sonnet-20240620-v1:0\": \"{\\\"input_price\\\": 3e-06, \\\"model_name\\\": \\\"anthropic.claude-3-5-sonnet-20240620-v1:0\\\", \\\"output_price\\\": 1.5e-05}\", \"anthropic.claude-3-haiku-20240307-v1:0\": \"{\\\"input_price\\\": 2.5e-07, \\\"model_name\\\": \\\"anthropic.claude-3-haiku-20240307-v1:0\\\", \\\"output_price\\\": 1.25e-06}\", \"c4ai-aya-23-8b\": \"{\\\"input_price\\\": 0, \\\"model_name\\\": \\\"c4ai-aya-23-8b\\\", \\\"output_price\\\": 0}\", \"claude-3-5-sonnet-20240620\": \"{\\\"input_price\\\": 3e-06, \\\"model_name\\\": \\\"claude-3-5-sonnet-20240620\\\", \\\"output_price\\\": 1.5e-05}\", \"claude-3-haiku-20240307\": \"{\\\"input_price\\\": 2.5e-07, \\\"model_name\\\": \\\"claude-3-haiku-20240307\\\", \\\"output_price\\\": 1.25e-06}\", \"claude-3-opus-20240229\": \"{\\\"input_price\\\": 1.5e-05, \\\"model_name\\\": \\\"claude-3-opus-20240229\\\", \\\"output_price\\\": 7.5e-05}\", \"claude-3-sonnet-20240229\": \"{\\\"input_price\\\": 3e-06, \\\"model_name\\\": \\\"claude-3-sonnet-20240229\\\", \\\"output_price\\\": 1.5e-05}\", \"cohere.command-r-plus-v1:0\": \"{\\\"input_price\\\": 3e-06, \\\"model_name\\\": \\\"cohere.command-r-plus-v1:0\\\", \\\"output_price\\\": 1.5e-05}\", \"command-r-08-202\": \"{\\\"input_price\\\": 2.5e-06, \\\"model_name\\\": \\\"command-r-08-202\\\", \\\"output_price\\\": 1e-05}\", \"gpt-4o\": \"{\\\"input_price\\\": 5e-06, \\\"model_name\\\": \\\"gpt-4o\\\", \\\"output_price\\\": 1.5e-05}\", \"gpt-4o-2024-05-13\": \"{\\\"input_price\\\": 5e-06, \\\"model_name\\\": \\\"gpt-4o-2024-05-13\\\", \\\"output_price\\\": 1.5e-05}\", \"gpt-4o-2024-08-06\": \"{\\\"input_price\\\": 2.5e-06, \\\"model_name\\\": \\\"gpt-4o-2024-08-06\\\", \\\"output_price\\\": 1e-05}\", \"gpt-4o-mini\": \"{\\\"input_price\\\": 1.5e-07, \\\"model_name\\\": \\\"gpt-4o-mini\\\", \\\"output_price\\\": 6e-07}\", \"llama.cpp\": \"{\\\"input_price\\\": 0, \\\"model_name\\\": \\\"llama.cpp\\\", \\\"output_price\\\": 0}\", \"meta.llama3-1-405b-instruct-v1:0\": \"{\\\"input_price\\\": 5.32e-06, \\\"model_name\\\": \\\"meta.llama3-1-405b-instruct-v1:0\\\", \\\"output_price\\\": 1.6e-05}\", \"meta.llama3-1-70b-instruct-v1:0\": \"{\\\"input_price\\\": 9.9e-07, \\\"model_name\\\": \\\"meta.llama3-1-70b-instruct-v1:0\\\", \\\"output_price\\\": 9.9e-07}\", \"meta.llama3-1-8b-instruct-v1:0\": \"{\\\"input_price\\\": 2.2e-07, \\\"model_name\\\": \\\"meta.llama3-1-8b-instruct-v1:0\\\", \\\"output_price\\\": 2.2e-07}\", \"mistral.mistral-large-2407-v1:0\": \"{\\\"input_price\\\": 4e-06, \\\"model_name\\\": \\\"mistral.mistral-large-2407-v1:0\\\", \\\"output_price\\\": 1.2e-05}\", \"mistral.mixtral-8x7b-instruct-v0:1\": \"{\\\"input_price\\\": 4.5e-07, \\\"model_name\\\": \\\"mistral.mixtral-8x7b-instruct-v0:1\\\", \\\"output_price\\\": 7e-07}\", \"ollama\": \"{\\\"input_price\\\": 0, \\\"model_name\\\": \\\"ollama\\\", \\\"output_price\\\": 0}\" }, \"interface-descriptions\": { \"agent\": \"{\\\"description\\\": \\\"Agent service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"document-embeddings\": \"{\\\"description\\\": \\\"Document embeddings service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"document-embeddings-store\": \"{\\\"description\\\": \\\"Document embeddings loader\\\", \\\"kind\\\": \\\"send\\\"}\", \"document-load\": \"{\\\"description\\\": \\\"Document loader\\\", \\\"kind\\\": \\\"send\\\", \\\"visible\\\": true}\", \"document-rag\": \"{\\\"description\\\": \\\"ChunkRAG service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"entity-contexts-load\": \"{\\\"description\\\": \\\"Entity contexts loader\\\", \\\"kind\\\": \\\"send\\\"}\", \"graph-embeddings\": \"{\\\"description\\\": \\\"Graph embeddings service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"graph-embeddings-store\": \"{\\\"description\\\": \\\"Graph embeddings loader\\\", \\\"kind\\\": \\\"send\\\"}\", \"graph-rag\": \"{\\\"description\\\": \\\"GraphRAG service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"prompt\": \"{\\\"description\\\": \\\"Prompt service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"text-completion\": \"{\\\"description\\\": \\\"Text completion service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"text-load\": \"{\\\"description\\\": \\\"Text document loader\\\", \\\"kind\\\": \\\"send\\\", \\\"visible\\\": true}\", \"triples\": \"{\\\"description\\\": \\\"Triples query service\\\", \\\"kind\\\": \\\"request-response\\\"}\", \"triples-store\": \"{\\\"description\\\": \\\"Triples loader\\\", \\\"kind\\\": \\\"send\\\"}\" }, \"flow-classes\": { \"document-rag\": \"{\\\"class\\\": {\\\"de-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\"}, \\\"document-rag:{class}\\\": {\\\"document-embeddings-request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"document-embeddings-response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\", \\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/document-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:{class}\\\"}, \\\"embeddings:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"mcp-tool:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"metering-rag:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"metering:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"prompt-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"prompt:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-completion-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"text-completion:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}}, \\\"description\\\": \\\"DocumentRAG only\\\", \\\"flow\\\": {\\\"chunker:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\"}, \\\"de-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\"}, \\\"document-embeddings:{id}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\"}, \\\"pdf-decoder:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\"}}, \\\"interfaces\\\": {\\\"document-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\"}, \\\"document-embeddings-store\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\", \\\"document-load\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"document-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:{class}\\\"}, \\\"embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"mcp-tool\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\"}, \\\"prompt\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\"}, \\\"text-completion\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-load\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\"}, \\\"tags\\\": [\\\"document-rag\\\"]}\", \"document-rag+graph-rag\": \"{\\\"class\\\": {\\\"de-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\"}, \\\"document-rag:{class}\\\": {\\\"document-embeddings-request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"document-embeddings-response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\", \\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/document-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:{class}\\\"}, \\\"embeddings:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"ge-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\"}, \\\"graph-rag:{class}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"graph-embeddings-request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"graph-embeddings-response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\", \\\"triples-request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"triples-response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}, \\\"mcp-tool:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"metering-rag:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"metering:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"prompt-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"prompt:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-completion-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"text-completion:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"triples-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}}, \\\"description\\\": \\\"Supports GraphRAG and document RAG, no core creation\\\", \\\"flow\\\": {\\\"agent-manager:{id}\\\": {\\\"graph-rag-request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"graph-rag-response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\", \\\"mcp-tool-request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"mcp-tool-response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\", \\\"next\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:{id}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"chunker:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\"}, \\\"de-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\"}, \\\"document-embeddings:{id}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\"}, \\\"ge-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\"}, \\\"graph-embeddings:{id}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"input\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\"}, \\\"kg-extract-definitions:{id}\\\": {\\\"entity-contexts\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"kg-extract-relationships:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"pdf-decoder:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\"}, \\\"triples-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}}, \\\"interfaces\\\": {\\\"agent\\\": {\\\"request\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:{id}\\\"}, \\\"document-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\"}, \\\"document-embeddings-store\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\", \\\"document-load\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"document-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:{class}\\\"}, \\\"embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"entity-contexts-load\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"graph-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\"}, \\\"graph-embeddings-store\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\", \\\"graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\"}, \\\"mcp-tool\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\"}, \\\"prompt\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\"}, \\\"text-completion\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-load\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\", \\\"triples\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}, \\\"triples-store\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"tags\\\": [\\\"document-rag\\\", \\\"graph-rag\\\", \\\"knowledge-extraction\\\"]}\", \"document-rag+graph-rag+kgcore\": \"{\\\"class\\\": {\\\"de-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\"}, \\\"document-rag:{class}\\\": {\\\"document-embeddings-request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"document-embeddings-response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\", \\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/document-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:{class}\\\"}, \\\"embeddings:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"ge-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\"}, \\\"graph-rag:{class}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"graph-embeddings-request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"graph-embeddings-response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\", \\\"triples-request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"triples-response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}, \\\"mcp-tool:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"metering-rag:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"metering:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"prompt-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"prompt:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-completion-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"text-completion:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"triples-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}}, \\\"description\\\": \\\"GraphRAG + DocumentRAG + knowledge core creation\\\", \\\"flow\\\": {\\\"agent-manager:{id}\\\": {\\\"graph-rag-request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"graph-rag-response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\", \\\"mcp-tool-request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"mcp-tool-response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\", \\\"next\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:{id}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"chunker:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\"}, \\\"de-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\"}, \\\"document-embeddings:{id}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\"}, \\\"ge-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\"}, \\\"graph-embeddings:{id}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"input\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\"}, \\\"kg-extract-definitions:{id}\\\": {\\\"entity-contexts\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"kg-extract-relationships:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"kg-store:{id}\\\": {\\\"graph-embeddings-input\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\", \\\"triples-input\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"pdf-decoder:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\"}, \\\"triples-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}}, \\\"interfaces\\\": {\\\"agent\\\": {\\\"request\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:{id}\\\"}, \\\"document-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-embeddings:{class}\\\"}, \\\"document-embeddings-store\\\": \\\"persistent://tg/flow/document-embeddings-store:{id}\\\", \\\"document-load\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"document-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/document-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/document-rag:{class}\\\"}, \\\"embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"entity-contexts-load\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"graph-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\"}, \\\"graph-embeddings-store\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\", \\\"graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\"}, \\\"mcp-tool\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\"}, \\\"prompt\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\"}, \\\"text-completion\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-load\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\", \\\"triples\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}, \\\"triples-store\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"tags\\\": [\\\"document-rag\\\", \\\"graph-rag\\\", \\\"knowledge-extraction\\\"]}\", \"graph-rag\": \"{\\\"class\\\": {\\\"embeddings:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"ge-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\"}, \\\"graph-rag:{class}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"graph-embeddings-request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"graph-embeddings-response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\", \\\"triples-request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"triples-response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}, \\\"mcp-tool:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"metering-rag:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"metering:{class}\\\": {\\\"input\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"prompt-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt-rag:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"prompt:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-completion-rag:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion-rag:{class}\\\"}, \\\"text-completion:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"triples-query:{class}\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}}, \\\"description\\\": \\\"GraphRAG only\\\", \\\"flow\\\": {\\\"agent-manager:{id}\\\": {\\\"graph-rag-request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"graph-rag-response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\", \\\"mcp-tool-request\\\": \\\"non-persistent://tg/request/mcp-tool:{class}\\\", \\\"mcp-tool-response\\\": \\\"non-persistent://tg/response/mcp-tool:{class}\\\", \\\"next\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"request\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:{id}\\\", \\\"text-completion-request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"text-completion-response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"chunker:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\"}, \\\"ge-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\"}, \\\"graph-embeddings:{id}\\\": {\\\"embeddings-request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"embeddings-response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\", \\\"input\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\"}, \\\"kg-extract-definitions:{id}\\\": {\\\"entity-contexts\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"kg-extract-relationships:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/chunk-load:{id}\\\", \\\"prompt-request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"prompt-response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\", \\\"triples\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"pdf-decoder:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"output\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\"}, \\\"triples-write:{id}\\\": {\\\"input\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}}, \\\"interfaces\\\": {\\\"agent\\\": {\\\"request\\\": \\\"non-persistent://tg/request/agent:{id}\\\", \\\"response\\\": \\\"non-persistent://tg/response/agent:{id}\\\"}, \\\"document-load\\\": \\\"persistent://tg/flow/document-load:{id}\\\", \\\"embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/embeddings:{class}\\\"}, \\\"entity-contexts-load\\\": \\\"persistent://tg/flow/entity-contexts-load:{id}\\\", \\\"graph-embeddings\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-embeddings:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-embeddings:{class}\\\"}, \\\"graph-embeddings-store\\\": \\\"persistent://tg/flow/graph-embeddings-store:{id}\\\", \\\"graph-rag\\\": {\\\"request\\\": \\\"non-persistent://tg/request/graph-rag:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/graph-rag:{class}\\\"}, \\\"mcp-tool\\\": {\\\"request\\\": \\\"non-persistent://tg/request/mtp-tool:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/mtp-tool:{class}\\\"}, \\\"prompt\\\": {\\\"request\\\": \\\"non-persistent://tg/request/prompt:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/prompt:{class}\\\"}, \\\"text-completion\\\": {\\\"request\\\": \\\"non-persistent://tg/request/text-completion:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/text-completion:{class}\\\"}, \\\"text-load\\\": \\\"persistent://tg/flow/text-document-load:{id}\\\", \\\"triples\\\": {\\\"request\\\": \\\"non-persistent://tg/request/triples:{class}\\\", \\\"response\\\": \\\"non-persistent://tg/response/triples:{class}\\\"}, \\\"triples-store\\\": \\\"persistent://tg/flow/triples-store:{id}\\\"}, \\\"tags\\\": [\\\"graph-rag\\\", \\\"knowledge-extraction\\\"]}\" } }",

    "init-trustgraph" +: {
    
        create:: function(engine)

            local container =
                engine.container("init-trustgraph")
                    .with_image(images.trustgraph_flow)
                    .with_command(
                        [
                            "tg-init-trustgraph",
                            "-p",
                            url.pulsar_admin,
                            "--config",
                            configuration,
                        ]
                    )
                    .with_limits("0.5", "128M")
                    .with_reservations("0.1", "128M");

            local containerSet = engine.containers(
                "init-trustgraph", [ container ]
            );

            engine.resources([
                containerSet,
            ])

    },

} + default_prompts

